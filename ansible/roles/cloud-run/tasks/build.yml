---
- name: install wget and curl
  yum:
    name:
      - wget
      - curl
      - java-11-openjdk-devel

- name: install python expect module
  pip:
    name: pexpect
- name: install maven and nodejs to build 

  shell: >
    wget https://www-us.apache.org/dist/maven/maven-3/{{maven_version}}/binaries/apache-maven-{{maven_version}}-bin.tar.gz -P /tmp
    && tar xf /tmp/apache-maven-{{maven_version}}-bin.tar.gz -C /usr/local 
    && ln -f -s /usr/local/apache-maven-{{maven_version}} /usr/local/maven 
    && curl -sL https://rpm.nodesource.com/setup_13.x | bash -
    && yum install -y nodejs
  args:
    warn: False

- name: clone backend github
  git:
    repo: "{{backend_repo}}"
    dest: "{{workspace}}/backend"
    force: yes
    version: "{{backend_tag}}"

- name: clone frontend github
  git:
    repo: "{{frontend_repo}}"
    dest: "{{workspace}}/frontend"
    force: yes
    version: "{{frontend_tag}}"

- name: set neo4j bearer
  shell: echo "Basic $(echo -n "neo4j:{{neo4j_password}}" | base64)"
  register: output_bearer

- name: set bearer token
  set_fact:
    bearer: "{{output_bearer.stdout_lines | first}}"

- name: remove the application_example.properties file 
  file:
    path: "{{workspace}}/backend/src/main/resources/application_example.properties"
    state: absent

- name: copy application.properties file to /src/main/resources/
  template:
    src: application.properties.j2
    dest: "{{workspace}}/backend/src/main/resources/application.properties"


- name: update frontend and backend config
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - {src: 'backend.yml.j2',dest: '{{workspace}}/backend.yml'}
    - {src: 'frontend.yml.j2',dest: '{{workspace}}/frontend.yml'}

- name: build backend code
  command: /usr/local/maven/bin/mvn package -DskipTests
  args:
    chdir: "{{workspace}}/backend"

- name: copy Bento-0.0.1.war to api.war
  copy:
    remote_src: yes
    src: "{{workspace}}/backend/target/Bento-0.0.1.war"
    dest: "{{workspace}}/backend/target/ROOT.war"
    mode: 0664

- name: copy nginx conf
  copy:
    remote_src: yes
    src: "{{workspace}}/backend/dockerfiles/nginx.conf"
    dest: "{{workspace}}/frontend/nginx.conf"

- name: login to docker
  expect: 
    command: gcloud auth configure-docker
    responses:
      Do you want to continue (Y/n)?: Y

- name: build custodian/bento-backend image
  docker_image:
    build:
      path: "{{workspace}}/backend"
      dockerfile: "{{workspace}}/backend/dockerfiles/backend-dockerfile"
      pull: yes
    name: gcr.io/{{gcp_project}}/backend
    tag: "{{image_tag}}"
    force_tag: yes
    source: build
    force_source: yes
    push: yes
    
- name: copy environment file to {{workspace}}/bento-frontend
  template:
    src: env.j2
    dest: "{{workspace}}/frontend/.env"

- name: run npm install in {{workspace}}/bento-frontend/
  shell: "{{item}}"
  args:
    chdir: "{{workspace}}/frontend"
  ignore_errors: True
  loop:
    - npm install 
    
- name: run npm build in frontend
  shell: npm run-script build
  args:
    chdir: "{{workspace}}/frontend"
  ignore_errors: True
          
- name: build custodian/bento-frontend image
  docker_image:
    build:
      path: "{{workspace}}/frontend"
      dockerfile: "{{workspace}}/backend/dockerfiles/frontend-cloudrun-dockerfile"
      pull: yes
      nocache: yes
    name: gcr.io/{{gcp_project}}/frontend
    tag: "{{image_tag}}"
    force_tag: yes
    source: build
    force_source: yes
    push: yes

- name: update deployments
  shell: "{{item}}"
  loop:
    - gcloud beta run services replace {{workspace}}/backend.yml --platform managed --region  {{gcp_region}}
    - gcloud beta run services replace {{workspace}}/frontend.yml --platform managed --region {{gcp_region}}
  when: update == "yes"